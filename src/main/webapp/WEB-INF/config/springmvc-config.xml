<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="app05a.controller"/>
    <context:component-scan base-package="app05a.service"/>
    <!--<context:component-scan base-package="app05a.common"/>-->

    <!--<mvc:annotation-driven/>-->
    <!--为Converter或Formatter增加conversion-service="conversionService"-->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->
    <!--<mvc:annotation-driven conversion-service="conversionService2"/>-->
    <mvc:annotation-driven conversion-service="conversionService3"/>

    <!--
    http://perfy315.iteye.com/blog/2008763
    表示当浏览器有静态资源请求的时候，并且请求url路径中带有：/js/，则这个资源跑到webapp目录下的/WEB-INF/statics/js/去找
    比如我们在 JSP 中引入一个 js 文件：src="${webRoot}/js/jQuery-core/jquery-1.6.1.min.js
    -->
    <mvc:resources mapping="/css/**" location="/WEB-INF/static/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/static/js/"/>
    <!--
    在页面中引用图片时，会匹配该映射
    <img width="100" src="http://localhost:8080/images/20160823_123626_000.png"/>
    -->
    <mvc:resources mapping="/images/**" location="/WEB-INF/images/"/>
    <!--No mapping found for HTTP request with URI [/images.html] in DispatcherServlet with name 'springmvc'-->
    <mvc:resources mapping="/*.html" location="/"/>

    <!--使用更具备一般性的Converter-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--自定义的Converter-->
                <bean class="app05a.common.DateConverter">
                    <constructor-arg type="java.lang.String" value="yyyy-MM-dd"/>
                </bean>
            </set>
        </property>
    </bean>

    <!--直接注册Formatter-->
    <bean id="conversionService2" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <!--自定义的Converter-->
                <bean class="app05a.common.DateFormatter">
                    <constructor-arg type="java.lang.String" value="yyyy-MM-dd"/>
                </bean>
            </set>
        </property>
    </bean>

    <!--使用Registrar注册Formatter-->
    <bean id="conversionService3" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatterRegistrars">
            <set>
                <!--自定义的Converter-->
                <bean class="app05a.common.DateRegistrar">
                    <constructor-arg type="java.lang.String" value="yyyy-MM-dd"/>
                </bean>
            </set>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--绑定验证器Validator-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/config/messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 文件上传 start 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 文件大小最大值 上传文件大小限制为10M，10*1024*1024 -->
        <property name="maxUploadSize" value="10485760"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="4096"/>
    </bean>
    <!--文件上传 end-->

    <!--Servlet3文件上传 ，不再围绕commons-fileupload和commons-io，需要web.xml配置
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
    -->
</beans>